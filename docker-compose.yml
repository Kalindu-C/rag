version: '3.8'

services:
  # Backend Service (FastAPI)
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: rag-backend
    ports:
      - "8000:8000"
    environment:
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
      - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - ENV=production
    env_file:
      - .env
    networks:
      - rag-network
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

  # Frontend Service (Streamlit)
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: rag-frontend
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://backend:8000
      - ENV=production
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - rag-network
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

networks:
  rag-network:
    driver: bridge

# Optional: Add volumes for persistent data
volumes:
  rag-data:
    driver: local